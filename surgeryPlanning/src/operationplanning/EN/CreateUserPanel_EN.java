/*
 * Copyright (C) 2017 diana - All Rights Reserved
 *
 * 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * Althering the content of this licence under any circumstances is
 * strictly forbidden.
 * This application is part of a project developed during ERASMUS+ mobility
 * at University of Zaragoza, Spain.
 * This application is open-source and is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. 
 * 
 */
package operationplanning.EN;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import operationplanning.commonFiles.Users;
import operationplanning.commonFiles.Utils;

/**
 *
 * @author diana
 */
public class CreateUserPanel_EN extends javax.swing.JPanel {

    /**
     * Creates new form UserPanel_EN
     * @param userType
     */
    public CreateUserPanel_EN() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userNameLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        newPasswordField = new javax.swing.JPasswordField();
        repeatPasswordField = new javax.swing.JPasswordField();
        newPasswordLabel = new javax.swing.JLabel();
        repeatPasswordLabel = new javax.swing.JLabel();
        createUserButton = new javax.swing.JButton();
        userTypeLabel = new javax.swing.JLabel();
        userTypeComboBox = new javax.swing.JComboBox<>();

        userNameLabel.setText("Username");

        newPasswordLabel.setText("Password");

        repeatPasswordLabel.setText("Repeat password");

        createUserButton.setText("Create user");
        createUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserButtonActionPerformed(evt);
            }
        });

        userTypeLabel.setText("User type");

        userTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Head of department", "Coordinator", "Doctor", "Assistant" }));
        userTypeComboBox.setSelectedIndex(2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(repeatPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                    .addComponent(userTypeLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(repeatPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(newPasswordField)
                            .addComponent(userNameTextField)
                            .addComponent(userTypeComboBox, 0, 400, Short.MAX_VALUE))
                        .addGap(240, 240, 240))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repeatPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repeatPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userTypeLabel)
                    .addComponent(userTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createUserButton)
                .addContainerGap(218, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserButtonActionPerformed
        Users userInst = Users.getInstance();
        String newPassword = String.copyValueOf(newPasswordField.getPassword());
        String repeatPassword = String.copyValueOf(repeatPasswordField.getPassword());
        int userType = userTypeComboBox.getSelectedIndex();

        if("".equals(userNameTextField.getText()) || "".equals(newPassword) || "".equals(repeatPassword)){
            JOptionPane.showConfirmDialog(null, "One or more fields are empty."
                    + "\nAdd new user aborted.", "Error. Empty fields", JOptionPane.DEFAULT_OPTION);
            return;
        }

        if (!newPassword.equals(repeatPassword)) {
            JOptionPane.showConfirmDialog(null, "The password is not the same in both fields."
                    + "\nAdd new user aborted.", "Password doesn't match", JOptionPane.DEFAULT_OPTION);
            return;
        }
        int ans = JOptionPane.showOptionDialog(null, new JLabel("<html>Are you sure you want to add \n"
                + "this user <b>" + userNameTextField.getText() + "</b>?</html>"),
                "Add new user confirmation",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, null, JOptionPane.OK_OPTION);

        if (ans == JOptionPane.OK_OPTION) {
            boolean addUser = userInst.addNewUser(userNameTextField.getText(), newPassword, Utils.getUserType(userType));
            if (addUser) {
                JOptionPane.showConfirmDialog(null, "User has been added successfully.",
                        "User added successfully",
                        JOptionPane.DEFAULT_OPTION);

                newPasswordField.setText("");
                repeatPasswordField.setText("");
                userTypeComboBox.setSelectedIndex(2);
            }else {
                JOptionPane.showConfirmDialog(null, "User has NOT been added. It might already exist in database.",
                        "Error adding user",
                        JOptionPane.DEFAULT_OPTION);
            }
        }
    }//GEN-LAST:event_createUserButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createUserButton;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JPasswordField repeatPasswordField;
    private javax.swing.JLabel repeatPasswordLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JComboBox<String> userTypeComboBox;
    private javax.swing.JLabel userTypeLabel;
    // End of variables declaration//GEN-END:variables
}
