/*
 * Copyright (C) 2017 Diana Botez <dia.botez at gmail.com> - All Rights Reserved
 *
 * 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * Althering the content of this licence under any circumstances is
 * strictly forbidden.
 * This application is part of a project developed during ERASMUS+ mobility
 * at University of Zaragoza, Spain.
 * This application is open-source and is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. 
 * 
 */
package operationplanning.ES;

import java.util.Vector;
import javax.swing.JOptionPane;
import operationplanning.commonFiles.MedicIdentifiers;
import operationplanning.commonFiles.MedicalTeams;

/**
 *
 * @author Diana Botez <dia.botez at gmail.com>
 */
public class AddNewMedicWindow_ES extends javax.swing.JFrame {

    /**
     * Creates new form AddNewMedicWindow
     */
    public AddNewMedicWindow_ES() {
        initComponents();
        updateMedicalLeadComboBox();
    }

    public static void updateMedicalLeadComboBox() {
        if (medicalLeadComboBox == null) {
            return;
        }

        MedicalTeams medicalInst = new MedicalTeams();
        medicalLeadComboBox.removeAllItems();
        
        Vector<Vector<String>> teamDetails = medicalInst.getAllTeamDetails();
        for (Vector<String> teamDetail : teamDetails) {
            MedicIdentifiers coordinator = medicalInst.getCoordinator(Integer.parseInt(teamDetail.get(0).replace("TM", "")));
            if (coordinator != null) {
                medicalLeadComboBox.addItem(coordinator.lastName + " " + coordinator.firstName);
            }
        }
        medicalLeadComboBox.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        memberFirstNameTextField = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        memberFirstNameLabel = new javax.swing.JLabel();
        memberLastNameLabel = new javax.swing.JLabel();
        AddNewTeamButton = new javax.swing.JButton();
        memberDepartmentTextField = new javax.swing.JTextField();
        memberLastNameTextField = new javax.swing.JTextField();
        memberDepartmentLabel = new javax.swing.JLabel();
        medicalTeamLabel = new javax.swing.JLabel();
        medicalLeadComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        resetButton.setText("Reiniciar");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        memberFirstNameLabel.setText("Nombre del médico");

        memberLastNameLabel.setText("Apellido del médico");

        AddNewTeamButton.setText("Añadir un nuevo médico");
        AddNewTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewTeamButtonActionPerformed(evt);
            }
        });

        memberDepartmentLabel.setText("Departamento de médico");

        medicalTeamLabel.setText("Equipo médico");
        medicalTeamLabel.setMaximumSize(new java.awt.Dimension(200, 40));
        medicalTeamLabel.setMinimumSize(new java.awt.Dimension(150, 30));
        medicalTeamLabel.setPreferredSize(new java.awt.Dimension(150, 30));

        medicalLeadComboBox.setToolTipText("The medical team leader");
        medicalLeadComboBox.setMaximumSize(new java.awt.Dimension(32767, 40));
        medicalLeadComboBox.setMinimumSize(new java.awt.Dimension(350, 30));
        medicalLeadComboBox.setPreferredSize(new java.awt.Dimension(350, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(medicalTeamLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(memberLastNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(memberFirstNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(memberDepartmentLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddNewTeamButton))
                    .addComponent(memberLastNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(memberFirstNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(memberDepartmentTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(medicalLeadComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberLastNameLabel)
                    .addComponent(memberLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberFirstNameLabel)
                    .addComponent(memberFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberDepartmentLabel)
                    .addComponent(memberDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicalTeamLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(medicalLeadComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(AddNewTeamButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        memberLastNameTextField.setText("");
        memberFirstNameTextField.setText("");
        memberDepartmentTextField.setText("");
        updateMedicalLeadComboBox();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void AddNewTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewTeamButtonActionPerformed
        String memberLastName = memberLastNameTextField.getText();
        String memberFirstName = memberFirstNameTextField.getText();
        String memberDepartment = memberDepartmentTextField.getText();
        int leadIndex = medicalLeadComboBox.getSelectedIndex();

        if ("".equals(memberLastName) || "".equals(memberDepartment)
                || "".equals(memberFirstName) || leadIndex == -1) {
            JOptionPane.showMessageDialog(this, "Uno o más campos están vacíos. Llénelos e inténtelo de nuevo.",
                    "Error al agregar un nuevo médico", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        MedicalTeams medicalInst = new MedicalTeams();
        MedicIdentifiers coordinator = medicalInst.getDoctorByFullName(medicalLeadComboBox.getItemAt(leadIndex));
        int doctorId = Integer.parseInt(medicalInst.generateDoctorId().replace("D", ""));
        MedicIdentifiers member = new MedicIdentifiers(memberLastName, memberFirstName, memberDepartment, doctorId, coordinator.IDnumber);

        //check data
        if (-1 != medicalInst.getTeamIndexWithThisCoordinator(member)) {
            JOptionPane.showMessageDialog(this, "Este miembro ya existe como coordinador. No puede estar en otro equipo.",
                    "Error - Nombre del médico", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (medicalInst.existsTeamWithThisMember(member)) {
            JOptionPane.showMessageDialog(this, "Este miembro ya existe en un equipo. No puede estar en otro equipo.",
                    "Error - Nombre del médico", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Object[] o = {"Añadir", "Cancelar"};
        int option = JOptionPane.showOptionDialog(this, "Un nuevo médico con los siguentes datos va a ser añadido:\n"
                + "\nApellido - " + memberLastName
                + "\nNombre - " + memberFirstName
                + "\nDepartamento - " + memberDepartment
                + "\n\nEn el equipo de " + coordinator.lastName + " " + coordinator.firstName
                + "\n\n¿Seguro que quieres agregar a este nuevo médico?",
                "Agregar un nuevo médico", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, o, o[1]);

        if (0 == option) {
            // add the new team member in the data base
            medicalInst.addNewMedicToMedicalTeam(coordinator, member);

            Planning_ES.refreshMedicalTeamTabbedPannel();
            ManageDoctorsPanel_ES.updateMedicList();
            SeePatientListPanel_ES.updateMedicList();
            CreateSchedulePanel_ES.updateMedicList();
            UpdatePatientPanel_ES.refreshData();

            resetButtonActionPerformed(null);
        }

        this.dispose();
    }//GEN-LAST:event_AddNewTeamButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNewTeamButton;
    private javax.swing.JPanel jPanel1;
    private static javax.swing.JComboBox<String> medicalLeadComboBox;
    private javax.swing.JLabel medicalTeamLabel;
    private javax.swing.JLabel memberDepartmentLabel;
    private javax.swing.JTextField memberDepartmentTextField;
    private javax.swing.JLabel memberFirstNameLabel;
    private javax.swing.JTextField memberFirstNameTextField;
    private javax.swing.JLabel memberLastNameLabel;
    private javax.swing.JTextField memberLastNameTextField;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables
}
