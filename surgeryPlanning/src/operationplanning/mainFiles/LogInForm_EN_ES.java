/*
 * Copyright (C) 2017 Diana Botez <dia.botez at gmail.com> - All Rights Reserved
 *
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * Althering the content of this licence under any circumstances is
 * strictly forbidden.
 * This application is part of a project developed during ERASMUS+ mobility
 * at University of Zaragoza, Spain.
 * This application is open-source and is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 */
package operationplanning.mainFiles;

import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import operationplanning.ES.Planning_ES;
import operationplanning.EN.Planning_EN;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import operationplanning.commonFiles.DatabaseConnection;
import operationplanning.commonFiles.DatabaseQueries;
import operationplanning.commonFiles.Users;
import operationplanning.commonFiles.Utils;

/**
 * @abstract
 *
 * @author user
 */
public class LogInForm_EN_ES extends javax.swing.JFrame {

    private final DatabaseConnection dataBase;
    private final String currentLanguage;
    private final WelcomeWindow welcomeWindow;

    /**
     * Creates new form
     *
     * @param language
     * @param welcomeWindow
     */
    public LogInForm_EN_ES(String language, WelcomeWindow welcomeWindow) {

        currentLanguage = language;
        this.welcomeWindow = welcomeWindow;

        BufferedImage myPicture = null;
        try {
            myPicture = ImageIO.read(this.getClass().getResource("/images/Logo.jpg"));
            setIconImage(myPicture);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        initComponents();
        setLocationRelativeTo(null);

        dataBase = DatabaseConnection.getInstance();
        String message = dataBase.connectToDataBase();
        if (!message.equals("Connected")) {
            if (currentLanguage.equals("ES")) {
                JOptionPane.showConfirmDialog(this, "No se puede conectar a la base de datos.\n" + message,
                        "Error al conectarse a la base de datos", JOptionPane.DEFAULT_OPTION);
            } else {
                JOptionPane.showConfirmDialog(this, "Cannot connect to database.\n" + message,
                        "Error connecting to database", JOptionPane.DEFAULT_OPTION);
            }
            approveButton.setEnabled(false);
            usernameTextField.setEnabled(false);
            passPasswordField.setEnabled(false);
        }

        if (language.equals("ES")) {
            logInLabel.setText("¡Auténtate!");
            usernameLabel.setText("Usuario");
            passwordLabel.setText("Contraseña");
            approveButton.setText("Iniciar sesión");
        } else {
            logInLabel.setText("Authenticate yourself!");
            usernameLabel.setText("User");
            passwordLabel.setText("Password");
            approveButton.setText("Login");
        }
    }

    public void resetForm() {
        usernameTextField.setText("");
        passPasswordField.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeFormPanel = new javax.swing.JPanel();
        logInLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passPasswordField = new javax.swing.JPasswordField();
        approveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Surgery planning ");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        logInLabel.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        logInLabel.setText("Log in / Iniciar sesión");

        usernameLabel.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        usernameLabel.setText("User / Usuario");

        passwordLabel.setFont(new java.awt.Font("Lucida Sans", 0, 15)); // NOI18N
        passwordLabel.setText("Password / Contraseña");

        passPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passPasswordFieldActionPerformed(evt);
            }
        });

        approveButton.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        approveButton.setText("Approve / Aprobar");
        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout welcomeFormPanelLayout = new org.jdesktop.layout.GroupLayout(welcomeFormPanel);
        welcomeFormPanel.setLayout(welcomeFormPanelLayout);
        welcomeFormPanelLayout.setHorizontalGroup(
            welcomeFormPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(welcomeFormPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(welcomeFormPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(usernameLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(passwordLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(welcomeFormPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(passPasswordField)
                    .add(usernameTextField)
                    .add(welcomeFormPanelLayout.createSequentialGroup()
                        .add(welcomeFormPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(logInLabel)
                            .add(approveButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 241, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 186, Short.MAX_VALUE))))
        );
        welcomeFormPanelLayout.setVerticalGroup(
            welcomeFormPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(welcomeFormPanelLayout.createSequentialGroup()
                .add(38, 38, 38)
                .add(logInLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(welcomeFormPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(usernameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(usernameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(welcomeFormPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(passwordLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(passPasswordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(approveButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(welcomeFormPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(welcomeFormPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void approveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_approveButtonActionPerformed
    {//GEN-HEADEREND:event_approveButtonActionPerformed
        /* Get credentials */
        String user = usernameTextField.getText();
        char[] charPass = passPasswordField.getPassword();
        String pass = String.copyValueOf(charPass);
        Utils.UserType userType;

        DatabaseQueries dbQueries = new DatabaseQueries();

        String hashedPass = Users.encryptPasswordString(user, pass);
        userType = dbQueries.getUserTypeForCredentials(user, hashedPass);
        if (userType.equals(Utils.UserType.UNKNOWN_TYPE)) {
            if (currentLanguage.equals("ES")) {
                JOptionPane.showMessageDialog(null, "Nombre de usuario o contraseña desconocido.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Unknown user name or password.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            return;
        }

        this.setVisible(false);

        if (currentLanguage.equals("ES")) {
            Planning_ES window = new Planning_ES(userType, user, welcomeWindow);
//            window.setExtendedState(JFrame.MAXIMIZED_BOTH);
            window.setVisible(true);
            window.setLocationRelativeTo(null);
        } else {
            Planning_EN window = new Planning_EN(userType, user, welcomeWindow);
//            window.setExtendedState(JFrame.MAXIMIZED_BOTH);
            window.setVisible(true);
            window.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_approveButtonActionPerformed

    private void passPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passPasswordFieldActionPerformed
        approveButtonActionPerformed(evt);
    }//GEN-LAST:event_passPasswordFieldActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DatabaseConnection.getInstance().disconnectFromDataBase();
        welcomeWindow.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveButton;
    private javax.swing.JLabel logInLabel;
    private javax.swing.JPasswordField passPasswordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JPanel welcomeFormPanel;
    // End of variables declaration//GEN-END:variables

}
